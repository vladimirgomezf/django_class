# Generated by Django 4.0.2 on 2022-02-16 20:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=30, verbose_name='Person Name')),
                ('city', models.CharField(max_length=30, verbose_name='Person Name')),
                ('state', models.CharField(max_length=30, verbose_name='Person Name')),
                ('zip', models.CharField(max_length=6, verbose_name='Person Name')),
                ('country', models.CharField(max_length=30, verbose_name='Person Name')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Person Name')),
                ('phone', models.CharField(max_length=15, verbose_name='Person Phone Number')),
                ('email', models.EmailField(max_length=254, verbose_name='Person Email')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='control_personal.person')),
                ('salary', models.FloatField(verbose_name='Professor Salary')),
            ],
            bases=('control_personal.person',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='control_personal.person')),
                ('student_number', models.IntegerField(verbose_name='Student Number')),
                ('average_rank', models.FloatField(verbose_name='Average Rank')),
            ],
            bases=('control_personal.person',),
        ),
    ]
